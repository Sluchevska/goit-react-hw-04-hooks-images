{"version":3,"sources":["components/SearchBar/SearchBar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","components/App/App.js","index.js"],"names":["SearchBar","onSearch","className","onSubmit","e","preventDefault","target","elements","pictureName","value","toLowerCase","type","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","image","onClick","webformatURL","tags","src","alt","ImageGallery","pictures","onSelect","map","picture","id","App","color","height","width","Component","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onClose","handleBackDrop","currentTarget","window","addEventListener","this","removeEventListener","createPortal","state","selectedImg","reqStatus","page","showModal","fetchPics","a","axios","get","response","data","hits","handleFormSubmit","setState","loadMoreBtnClick","prevState","handleSelectedImage","largeImageUrl","toggleModal","prevProps","nextSearch","nextPage","trim","length","toast","error","scrollTo","top","documentElement","scrollHeight","behavior","showButton","largeImageURL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c7e4fd82.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nconst SearchBar = ({ onSearch}) => {\r\n  const handleSearch = e => {\r\n    e.preventDefault();\r\n    onSearch(e.target.elements.pictureName.value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSearch} >\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          name=\"pictureName\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        \r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n\r\nSearchBar.propTypes = {\r\n  onSearch: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({ image, onClick }) {\r\n  const { webformatURL, tags } = image;\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        onClick={onClick}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.object.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ pictures, onSelect }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {pictures.map((picture, id) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          image={picture}\r\n          onClick={() => onSelect(picture)}\r\n        ></ImageGalleryItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  pictures: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      pictures: PropTypes.object,\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n  onSelect: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport default class App extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n<Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n    );\r\n  }\r\n}","import PropTypes from 'prop-types';\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" onClick={onClick} className=\"Button\">\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import { createPortal } from 'react-dom';\r\nimport { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackDrop = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackDrop}>\r\n        <div className=\"Modal\">\r\n          <img src={src} alt={alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string,\r\n};\r\n","import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport Loader from '../Loader/Loader';\r\nimport Button from '../Button/Button';\r\nimport Modal from '../Modal/Modal';\r\nimport '../image-finder/styles.css';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    pictureName: '',\r\n    pictures: [],\r\n    selectedImg: null,\r\n    reqStatus: 'idle',\r\n    page: 1,\r\n    showModal: false,\r\n  };\r\n\r\n  fetchPics = async (pictureName, page) => {\r\n    const keyApi = '22597300-51a9bfff07e627635843c3062';\r\n    const response = await axios.get(\r\n      `https://pixabay.com/api/?q=${pictureName}&page=${page}&key=${keyApi}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    );\r\n    return response.data.hits;\r\n  };\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    const nextSearch = this.state.pictureName;\r\n    const nextPage = this.state.page;\r\n    if (prevState.pictureName !== nextSearch || prevState.page !== nextPage) {\r\n      try {\r\n        this.setState({ reqStatus: 'pending' });\r\n        const pictures = await this.fetchPics(nextSearch, nextPage);\r\n        this.setState({ pictures, reqStatus: 'resolved' });\r\n        if (nextSearch.trim() === '' || pictures.length === 0) {\r\n          return toast.error(\r\n            `Sorry, but there are no pictures with  ${nextSearch}`,\r\n          );\r\n        }\r\n      } catch (error) {\r\n        this.setState({ reqStatus: 'rejected' });\r\n        toast.error('Something went wrong');\r\n      }\r\n\r\n      this.state.page > 1 &&\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = pictureName => {\r\n    this.setState({ pictureName });\r\n  };\r\n\r\n  loadMoreBtnClick = () => {\r\n    this.setState(prevState => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n  };\r\n\r\n  handleSelectedImage = largeImageUrl => {\r\n    this.setState(prevState => ({\r\n      showModal: !prevState.showModal,\r\n      selectedImg: largeImageUrl,\r\n    }));\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(state => ({\r\n      showModal: !state.showModal,\r\n    }));\r\n    this.setState({\r\n      selectedImg: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { pictures, reqStatus, selectedImg, showModal } = this.state;\r\n\r\n    const showButton = pictures.length >= 1;\r\n\r\n    return (\r\n      <div>\r\n        <Toaster />\r\n        <SearchBar onSearch={this.handleFormSubmit} />\r\n        <ImageGallery pictures={pictures} onSelect={this.handleSelectedImage} />\r\n        {showButton && <Button onClick={this.loadMoreBtnClick} />}\r\n        {showModal && (\r\n          <Modal\r\n            src={selectedImg.largeImageURL}\r\n            alt={selectedImg.tags}\r\n            onClose={this.toggleModal}\r\n          />\r\n        )}\r\n         {reqStatus === 'pending' && <Loader />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}